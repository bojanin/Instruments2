// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: bandicoot.proto
// Protobuf C++ Version: 5.29.3

#ifndef bandicoot_2eproto_2epb_2eh
#define bandicoot_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_bandicoot_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_bandicoot_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_bandicoot_2eproto;
namespace bandicoot {
class TestMsg;
struct TestMsgDefaultTypeInternal;
extern TestMsgDefaultTypeInternal _TestMsg_default_instance_;
class Void;
struct VoidDefaultTypeInternal;
extern VoidDefaultTypeInternal _Void_default_instance_;
}  // namespace bandicoot
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace bandicoot {

// ===================================================================


// -------------------------------------------------------------------

class Void final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:bandicoot.Void) */ {
 public:
  inline Void() : Void(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Void* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Void));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Void(
      ::google::protobuf::internal::ConstantInitialized);

  inline Void(const Void& from) : Void(nullptr, from) {}
  inline Void(Void&& from) noexcept
      : Void(nullptr, std::move(from)) {}
  inline Void& operator=(const Void& from) {
    CopyFrom(from);
    return *this;
  }
  inline Void& operator=(Void&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Void& default_instance() {
    return *internal_default_instance();
  }
  static inline const Void* internal_default_instance() {
    return reinterpret_cast<const Void*>(
        &_Void_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Void& a, Void& b) { a.Swap(&b); }
  inline void Swap(Void* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Void* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Void* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<Void>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Void& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Void& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bandicoot.Void"; }

 protected:
  explicit Void(::google::protobuf::Arena* arena);
  Void(::google::protobuf::Arena* arena, const Void& from);
  Void(::google::protobuf::Arena* arena, Void&& from) noexcept
      : Void(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:bandicoot.Void)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Void& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_bandicoot_2eproto;
};
// -------------------------------------------------------------------

class TestMsg final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bandicoot.TestMsg) */ {
 public:
  inline TestMsg() : TestMsg(nullptr) {}
  ~TestMsg() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TestMsg* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TestMsg));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMsg(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestMsg(const TestMsg& from) : TestMsg(nullptr, from) {}
  inline TestMsg(TestMsg&& from) noexcept
      : TestMsg(nullptr, std::move(from)) {}
  inline TestMsg& operator=(const TestMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMsg& operator=(TestMsg&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMsg* internal_default_instance() {
    return reinterpret_cast<const TestMsg*>(
        &_TestMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TestMsg& a, TestMsg& b) { a.Swap(&b); }
  inline void Swap(TestMsg* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMsg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMsg* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TestMsg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMsg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestMsg& from) { TestMsg::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TestMsg* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bandicoot.TestMsg"; }

 protected:
  explicit TestMsg(::google::protobuf::Arena* arena);
  TestMsg(::google::protobuf::Arena* arena, const TestMsg& from);
  TestMsg(::google::protobuf::Arena* arena, TestMsg&& from) noexcept
      : TestMsg(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFirstFieldNumber = 1,
    kSecondFieldNumber = 2,
  };
  // string first = 1;
  void clear_first() ;
  const std::string& first() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_first(Arg_&& arg, Args_... args);
  std::string* mutable_first();
  PROTOBUF_NODISCARD std::string* release_first();
  void set_allocated_first(std::string* value);

  private:
  const std::string& _internal_first() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_first(
      const std::string& value);
  std::string* _internal_mutable_first();

  public:
  // string second = 2;
  void clear_second() ;
  const std::string& second() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_second(Arg_&& arg, Args_... args);
  std::string* mutable_second();
  PROTOBUF_NODISCARD std::string* release_second();
  void set_allocated_second(std::string* value);

  private:
  const std::string& _internal_second() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_second(
      const std::string& value);
  std::string* _internal_mutable_second();

  public:
  // @@protoc_insertion_point(class_scope:bandicoot.TestMsg)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      37, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestMsg& from_msg);
    ::google::protobuf::internal::ArenaStringPtr first_;
    ::google::protobuf::internal::ArenaStringPtr second_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bandicoot_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TestMsg

// string first = 1;
inline void TestMsg::clear_first() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.first_.ClearToEmpty();
}
inline const std::string& TestMsg::first() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bandicoot.TestMsg.first)
  return _internal_first();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestMsg::set_first(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.first_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bandicoot.TestMsg.first)
}
inline std::string* TestMsg::mutable_first() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_first();
  // @@protoc_insertion_point(field_mutable:bandicoot.TestMsg.first)
  return _s;
}
inline const std::string& TestMsg::_internal_first() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.first_.Get();
}
inline void TestMsg::_internal_set_first(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.first_.Set(value, GetArena());
}
inline std::string* TestMsg::_internal_mutable_first() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.first_.Mutable( GetArena());
}
inline std::string* TestMsg::release_first() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bandicoot.TestMsg.first)
  return _impl_.first_.Release();
}
inline void TestMsg::set_allocated_first(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.first_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.first_.IsDefault()) {
    _impl_.first_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:bandicoot.TestMsg.first)
}

// string second = 2;
inline void TestMsg::clear_second() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.second_.ClearToEmpty();
}
inline const std::string& TestMsg::second() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bandicoot.TestMsg.second)
  return _internal_second();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestMsg::set_second(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.second_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bandicoot.TestMsg.second)
}
inline std::string* TestMsg::mutable_second() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_second();
  // @@protoc_insertion_point(field_mutable:bandicoot.TestMsg.second)
  return _s;
}
inline const std::string& TestMsg::_internal_second() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.second_.Get();
}
inline void TestMsg::_internal_set_second(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.second_.Set(value, GetArena());
}
inline std::string* TestMsg::_internal_mutable_second() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.second_.Mutable( GetArena());
}
inline std::string* TestMsg::release_second() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bandicoot.TestMsg.second)
  return _impl_.second_.Release();
}
inline void TestMsg::set_allocated_second(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.second_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.second_.IsDefault()) {
    _impl_.second_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:bandicoot.TestMsg.second)
}

// -------------------------------------------------------------------

// Void

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace bandicoot


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // bandicoot_2eproto_2epb_2eh
